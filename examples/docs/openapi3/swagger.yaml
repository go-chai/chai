components:
  schemas:
    controller.Message:
      properties:
        message:
          example: message
          type: string
      type: object
    httputil.Error:
      properties:
        error:
          type: string
        error_debug:
          type: string
        error_description:
          type: string
        status_code:
          type: integer
      type: object
    model.Account:
      properties:
        id:
          example: 1
          format: int64
          type: integer
        name:
          example: account name
          type: string
        some_number:
          example: 1234
          type: integer
        uuid:
          example: 550e8400-e29b-41d4-a716-446655440000
          format: uuid
          type: string
      type: object
    model.Account2:
      properties:
        custom_type_4567:
          description: zzz
          items:
            $ref: '#/components/schemas/model.CustomType456'
          type: array
        custom_val_123:
          example: custom val 123
          type: string
        id:
          example: 113
          format: int64
          maximum: 195
          type: integer
        name:
          example: account name
          type: string
        some_number:
          example: 1234
          type: integer
        uuid:
          example: 550e8400-e29b-41d4-a716-446655440000
          format: uuid
          type: string
      type: object
    model.AddAccount:
      properties:
        name:
          example: account name
          type: string
      type: object
    model.Admin:
      properties:
        id:
          example: 1
          type: integer
        name:
          example: admin name
          type: string
      type: object
    model.Bottle:
      properties:
        account:
          $ref: '#/components/schemas/model.Account'
        id:
          example: 1
          type: integer
        name:
          example: bottle_name
          type: string
      type: object
    model.CustomType456:
      properties:
        zz:
          example: 34
          type: integer
        zzStr:
          example: zz string value
          type: string
      type: object
    model.UpdateAccount:
      properties:
        name:
          example: account name
          type: string
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-XSRF-TOKEN
      type: apiKey
    BasicAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
    OAuth2AccessToken:
      in: header
      name: X-XSRF-TOKEN
      type: apiKey
    OAuth2Application:
      in: header
      name: X-XSRF-TOKEN
      type: apiKey
    OAuth2Implicit:
      in: header
      name: X-XSRF-TOKEN
      type: apiKey
    OAuth2Password:
      in: header
      name: X-XSRF-TOKEN
      type: apiKey
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
openapi: 3.0.3
paths:
  /api/v1/accounts/:
    get:
      description: get accounts
      parameters:
      - description: name search by q
        in: query
        name: q
        schema:
          format: email
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.Account'
                type: array
          description: Created
        "202":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.Account'
                type: array
          description: Accepted
        "203":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.Account'
                type: array
          description: Non-Authoritative Information
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Internal Server Error
      summary: List accounts
      tags:
      - accounts
    post:
      description: add by json account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.AddAccount'
        description: Add account
        required: true
        x-originalParamName: account
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Account'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Internal Server Error
      summary: Add an account
      tags:
      - accounts
  /api/v1/accounts/{id}:
    delete:
      description: Delete by account ID
      parameters:
      - in: path
        name: id
        required: true
        schema:
          pattern: ^[0-9]+$
          type: integer
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Account'
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Internal Server Error
      summary: Delete an account
      tags:
      - accounts
    get:
      description: get string by ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Account'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Internal Server Error
      summary: Show an account
      tags:
      - accounts
    patch:
      description: Update by json account
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.UpdateAccount'
        description: Update account
        required: true
        x-originalParamName: account
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Account'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Internal Server Error
      summary: Update an account
      tags:
      - accounts
  /api/v1/accounts/{id}/images:
    post:
      description: Upload file
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: account image
                  format: binary
                  required:
                  - file
                  type: string
                  x-formData-name: file
              required:
              - file
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controller.Message'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Internal Server Error
      summary: Upload account image
      tags:
      - accounts
  /api/v1/admin/auth:
    post:
      description: get admin info
      requestBody:
        content:
          application/json:
            schema:
              type: object
        x-originalParamName: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Admin'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Auth admin
      tags:
      - accounts
      - admin
  /api/v1/bottles/:
    get:
      description: get bottles
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.Bottle'
                type: array
          description: ""
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.Bottle'
                type: array
          description: ""
        "202":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.Bottle'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: ""
      summary: List bottles
      tags:
      - bottles
  /api/v1/bottles/{id}:
    get:
      description: get string by ID
      operationId: get-string-by-int
      parameters:
      - description: Bottle ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Bottle'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: Internal Server Error
      summary: Show a bottle
      tags:
      - bottles
  /api/v1/examples/attribute:
    get:
      description: attribute
      parameters:
      - description: string default
        in: query
        name: default
        schema:
          default: A
          type: string
      - description: int enums
        in: query
        name: enumint
        schema:
          enum:
          - 1
          - 2
          - 3
          type: integer
      - description: int enums
        in: query
        name: enumnumber
        schema:
          enum:
          - 1.1
          - 1.2
          - 1.3
          type: number
      - description: string enums
        in: query
        name: enumstring
        schema:
          enum:
          - A
          - B
          - C
          type: string
      - description: int valid
        in: query
        name: int
        schema:
          maximum: 10
          minimum: 1
          type: integer
      - description: string valid
        in: query
        name: string
        schema:
          maxLength: 10
          minLength: 5
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: answer
        "400":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "404":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ok
      summary: attribute example
      tags:
      - example
    post:
      description: post request example
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Account'
        x-originalParamName: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Account2'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputil.Error'
          description: ""
      summary: post request example
  /api/v1/examples/calc:
    get:
      description: plus
      parameters:
      - description: used for calc
        in: query
        name: val1
        required: true
        schema:
          type: integer
      - description: used for calc
        in: query
        name: val2
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: integer
          description: answer
        "400":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "404":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ok
      summary: calc example
      tags:
      - example
  /api/v1/examples/groups/{group_id}/accounts/{account_id}:
    get:
      description: path params
      parameters:
      - description: Account ID
        in: path
        name: account_id
        required: true
        schema:
          type: integer
      - description: Group ID
        in: path
        name: group_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: answer
        "400":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "404":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ok
      summary: path params example
      tags:
      - example
  /api/v1/examples/header:
    get:
      description: custome header
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: answer
        "400":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "404":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ok
      summary: custome header example
      tags:
      - example
  /api/v1/examples/ping:
    get:
      description: do ping
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: pong
        "400":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "404":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ok
      summary: ping example
      tags:
      - example
  /api/v1/examples/securities:
    get:
      description: custome header
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: answer
        "400":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "404":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ok
      security:
      - ApiKeyAuth: []
      - OAuth2Implicit:
        - admin
        - write
      summary: custome header example
      tags:
      - example
servers:
- url: localhost:8080
