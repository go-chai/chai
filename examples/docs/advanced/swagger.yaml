components:
  schemas:
    Account:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        some_number:
          type: integer
        uuid:
          format: uuid
          items: {}
          type: array
      required:
      - id
      - name
      - some_number
      - uuid
      type: object
    Account2:
      properties:
        custom_type_4567:
          items:
            $ref: '#/components/schemas/CustomType456'
          type: array
        custom_val_123:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        some_number:
          type: integer
        uuid:
          format: uuid
          items: {}
          type: array
      required:
      - id
      - name
      - some_number
      - custom_val_123
      - custom_type_4567
      - uuid
      type: object
    AddAccount:
      properties:
        name:
          type: string
      required:
      - name
      type: object
    Admin:
      properties:
        id:
          type: integer
        name:
          type: string
      required:
      - id
      - name
      type: object
    Bottle:
      properties:
        account:
          $ref: '#/components/schemas/Account'
        id:
          type: integer
        name:
          type: string
      required:
      - id
      - name
      - account
      type: object
    CustomType456:
      properties:
        zz:
          type: integer
        zzStr:
          type: string
      required:
      - zz
      - zzStr
      type: object
    Error:
      properties:
        error:
          type: string
        error_debug:
          type: string
        error_description:
          type: string
        status_code:
          type: integer
      required:
      - error
      - error_debug
      - error_description
      - status_code
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Authorization
      type: apiKey
    BasicAuth:
      type: basic
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
openapi: 3.0.0
paths:
  /api/v1/accounts/:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAccount'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
  /api/v1/accounts/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          pattern: ^[0-9]+$
          type: string
      responses: null
    get:
      operationId: show-account
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
      summary: Show an account
      tags:
      - accounts
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses: null
  /api/v1/accounts/{id}/images:
    post:
      description: Upload file
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses: null
      summary: Upload an image
      tags:
      - accounts
  /api/v1/accounts/v2:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAccount'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
  /api/v1/admin/auth:
    post:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
  /api/v1/bottles/:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Bottle'
                type: array
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
  /api/v1/bottles/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bottle'
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
  /api/v1/examples/attribute:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account2'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
  /api/v1/examples/calc:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
  /api/v1/examples/groups/{group_id}/accounts/{account_id}:
    get:
      parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: string
      - in: path
        name: group_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
  /api/v1/examples/header:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
  /api/v1/examples/ping:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
  /api/v1/examples/securities:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
servers:
- url: localhost:8080
