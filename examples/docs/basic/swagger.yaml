components:
  schemas:
    Address:
      properties:
        city:
          type: string
        state:
          type: string
        street:
          type: string
        zip:
          type: string
      required:
      - street
      - city
      - state
      - zip
      type: object
    Error:
      properties:
        error:
          type: string
        error_debug:
          type: string
        error_description:
          type: string
        status_code:
          type: integer
      required:
      - error
      - error_debug
      - error_description
      - status_code
      type: object
    Int:
      type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
openapi: 3.0.0
paths:
  /api/v1/examples/{pathParam}/post:
    post:
      deprecated: true
      operationId: example
      parameters:
      - in: path
        name: pathParam
        required: true
        schema:
          type: string
      - explode: true
        in: query
        name: queryParam
        schema:
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: "some text used as a summary\n\t\t\t\tfor this example post handler"
      tags:
      - Examples
  /api/v1/examples/{pathParam}/post2:
    post:
      operationId: example2
      parameters:
      - in: path
        name: pathParam
        required: true
        schema:
          type: string
      - explode: true
        in: query
        name: queryParam
        schema:
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: success code
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      tags:
      - Examples
  /api/v1/examples/attribute:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
  /api/v1/examples/calc2:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Int'
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
  /api/v1/examples/groups/{group_id}/accounts/{account_id}:
    get:
      parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: string
      - in: path
        name: group_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
  /api/v1/examples/header:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
  /api/v1/examples/ping:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
  /api/v1/examples/securities:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
  /api/v1/examples/uuid2:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items: {}
                type: array
          description: ""
        default:
          content:
            application/json:
              schema:
                type: object
          description: ""
servers:
- url: localhost:8080
